{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 122, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Input({ className, type, ...props }: React.ComponentProps<\"input\">) {\n  return (\n    <input\n      type={type}\n      data-slot=\"input\"\n      className={cn(\n        \"file:text-foreground placeholder:text-muted-foreground selection:bg-primary selection:text-primary-foreground dark:bg-input/30 border-input flex h-9 w-full min-w-0 rounded-md border bg-transparent px-3 py-1 text-base shadow-xs transition-[color,box-shadow] outline-none file:inline-flex file:h-7 file:border-0 file:bg-transparent file:text-sm file:font-medium disabled:pointer-events-none disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n        \"focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px]\",\n        \"aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAEA;;;AAEA,SAAS,MAAM,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,MAAM;QACN,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mcACA,iFACA,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 154, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Label({\n  className,\n  ...props\n}: React.ComponentProps<typeof LabelPrimitive.Root>) {\n  return (\n    <LabelPrimitive.Root\n      data-slot=\"label\"\n      className={cn(\n        \"flex items-center gap-2 text-sm leading-none font-medium select-none group-data-[disabled=true]:pointer-events-none group-data-[disabled=true]:opacity-50 peer-disabled:cursor-not-allowed peer-disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,MAAM,EACb,SAAS,EACT,GAAG,OAC8C;IACjD,qBACE,6LAAC,oKAAA,CAAA,OAAmB;QAClB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uNACA;QAED,GAAG,KAAK;;;;;;AAGf;KAdS","debugId":null}},
    {"offset": {"line": 188, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { XIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot=\"dialog\" {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot=\"dialog-trigger\" {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot=\"dialog-portal\" {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot=\"dialog-close\" {...props} />\n}\n\nfunction DialogOverlay({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Overlay>) {\n  return (\n    <DialogPrimitive.Overlay\n      data-slot=\"dialog-overlay\"\n      className={cn(\n        \"data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-50 bg-black/50\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot=\"dialog-portal\">\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot=\"dialog-content\"\n        className={cn(\n          \"bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50%] left-[50%] z-50 grid w-full max-w-[calc(100%-2rem)] translate-x-[-50%] translate-y-[-50%] gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg\",\n          className\n        )}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\">\n          <XIcon />\n          <span className=\"sr-only\">Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-header\"\n      className={cn(\"flex flex-col gap-2 text-center sm:text-left\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"dialog-footer\"\n      className={cn(\n        \"flex flex-col-reverse gap-2 sm:flex-row sm:justify-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot=\"dialog-title\"\n      className={cn(\"text-lg leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot=\"dialog-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAGA;AACA;AAEA;AANA;;;;;AAQA,SAAS,OAAO,EACd,GAAG,OAC+C;IAClD,qBAAO,6LAAC,qKAAA,CAAA,OAAoB;QAAC,aAAU;QAAU,GAAG,KAAK;;;;;;AAC3D;KAJS;AAMT,SAAS,cAAc,EACrB,GAAG,OACkD;IACrD,qBAAO,6LAAC,qKAAA,CAAA,UAAuB;QAAC,aAAU;QAAkB,GAAG,KAAK;;;;;;AACtE;MAJS;AAMT,SAAS,aAAa,EACpB,GAAG,OACiD;IACpD,qBAAO,6LAAC,qKAAA,CAAA,SAAsB;QAAC,aAAU;QAAiB,GAAG,KAAK;;;;;;AACpE;MAJS;AAMT,SAAS,YAAY,EACnB,GAAG,OACgD;IACnD,qBAAO,6LAAC,qKAAA,CAAA,QAAqB;QAAC,aAAU;QAAgB,GAAG,KAAK;;;;;;AAClE;MAJS;AAMT,SAAS,cAAc,EACrB,SAAS,EACT,GAAG,OACkD;IACrD,qBACE,6LAAC,qKAAA,CAAA,UAAuB;QACtB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,cAAc,EACrB,SAAS,EACT,QAAQ,EACR,GAAG,OACkD;IACrD,qBACE,6LAAC;QAAa,aAAU;;0BACtB,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,aAAU;gBACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+WACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,mMAAA,CAAA,QAAK;;;;;0CACN,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;AAKpC;MAxBS;AA0BT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,aAAa,EAAE,SAAS,EAAE,GAAG,OAAoC;IACxE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,qKAAA,CAAA,QAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,kBAAkB,EACzB,SAAS,EACT,GAAG,OACsD;IACzD,qBACE,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 385, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 437, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/dashboard/mock-data.ts"],"sourcesContent":["import { MetricDefinition, FieldDefinition, ChartType, Dashboard } from './types';\n\nexport const MOCK_METRICS: MetricDefinition[] = [\n  {\n    id: 'total_sales',\n    name: 'Total de Vendas',\n    description: 'Soma total de vendas realizadas',\n    table: 'sales',\n    field: 'amount',\n    aggregation: 'sum',\n    format: 'currency',\n  },\n  {\n    id: 'total_opportunities',\n    name: 'Total de Oportunidades',\n    description: 'Número total de oportunidades',\n    table: 'opportunities',\n    field: 'id',\n    aggregation: 'count',\n    format: 'number',\n  },\n  {\n    id: 'conversion_rate',\n    name: 'Taxa de Conversão',\n    description: 'Percentual de conversão de oportunidades',\n    table: 'opportunities',\n    field: 'status',\n    aggregation: 'avg',\n    format: 'percentage',\n  },\n  {\n    id: 'avg_deal_size',\n    name: 'Ticket Médio',\n    description: 'Valor médio por negócio fechado',\n    table: 'sales',\n    field: 'amount',\n    aggregation: 'avg',\n    format: 'currency',\n  },\n  {\n    id: 'active_deals',\n    name: 'Negócios Ativos',\n    description: 'Número de negócios em andamento',\n    table: 'opportunities',\n    field: 'id',\n    aggregation: 'count',\n    format: 'number',\n  },\n  {\n    id: 'closed_deals',\n    name: 'Negócios Fechados',\n    description: 'Número de negócios concluídos',\n    table: 'sales',\n    field: 'id',\n    aggregation: 'count',\n    format: 'number',\n  },\n];\n\nexport const MOCK_FIELDS: FieldDefinition[] = [\n  {\n    id: 'date',\n    name: 'Data',\n    table: 'sales',\n    field: 'created_at',\n    type: 'date',\n    filterable: true,\n    groupable: true,\n  },\n  {\n    id: 'salesperson',\n    name: 'Vendedor',\n    table: 'sales',\n    field: 'salesperson_id',\n    type: 'string',\n    filterable: true,\n    groupable: true,\n  },\n  {\n    id: 'status',\n    name: 'Status',\n    table: 'opportunities',\n    field: 'status',\n    type: 'string',\n    filterable: true,\n    groupable: true,\n  },\n  {\n    id: 'region',\n    name: 'Região',\n    table: 'sales',\n    field: 'region',\n    type: 'string',\n    filterable: true,\n    groupable: true,\n  },\n  {\n    id: 'product',\n    name: 'Produto',\n    table: 'sales',\n    field: 'product_id',\n    type: 'string',\n    filterable: true,\n    groupable: true,\n  },\n  {\n    id: 'customer_type',\n    name: 'Tipo de Cliente',\n    table: 'customers',\n    field: 'type',\n    type: 'string',\n    filterable: true,\n    groupable: true,\n  },\n];\n\nexport const CHART_TYPES: ChartType[] = [\n  {\n    id: 'kpi',\n    name: 'KPI',\n    icon: '📊',\n    description: 'Indicador chave de performance',\n    requiredFields: [],\n    supportedMetrics: ['total_sales', 'total_opportunities', 'conversion_rate', 'avg_deal_size', 'active_deals', 'closed_deals'],\n  },\n  {\n    id: 'bar',\n    name: 'Gráfico de Barras',\n    icon: '📊',\n    description: 'Gráfico de barras verticais',\n    requiredFields: ['groupBy'],\n    supportedMetrics: ['total_sales', 'total_opportunities', 'active_deals', 'closed_deals'],\n  },\n  {\n    id: 'line',\n    name: 'Gráfico de Linha',\n    icon: '📈',\n    description: 'Gráfico de linha temporal',\n    requiredFields: ['xAxis'],\n    supportedMetrics: ['total_sales', 'total_opportunities', 'conversion_rate'],\n  },\n  {\n    id: 'pie',\n    name: 'Gráfico de Pizza',\n    icon: '🥧',\n    description: 'Gráfico circular de distribuição',\n    requiredFields: ['groupBy'],\n    supportedMetrics: ['total_sales', 'total_opportunities', 'active_deals'],\n  },\n  {\n    id: 'table',\n    name: 'Tabela',\n    icon: '📋',\n    description: 'Tabela de dados detalhados',\n    requiredFields: [],\n    supportedMetrics: ['total_sales', 'total_opportunities', 'active_deals', 'closed_deals'],\n  },\n];\n\nexport const MOCK_DASHBOARDS: Dashboard[] = [\n  {\n    id: 'default-admin',\n    name: 'Dashboard Administrativo',\n    description: 'Visão geral para administradores',\n    widgets: [\n      {\n        id: 'widget-1',\n        type: 'kpi',\n        title: 'Total de Vendas',\n        metric: 'total_sales',\n        filters: [],\n        position: { x: 0, y: 0, width: 3, height: 2 },\n        config: { format: 'currency', target: 100000 },\n      },\n      {\n        id: 'widget-2',\n        type: 'kpi',\n        title: 'Oportunidades',\n        metric: 'total_opportunities',\n        filters: [],\n        position: { x: 3, y: 0, width: 3, height: 2 },\n        config: { format: 'number' },\n      },\n      {\n        id: 'widget-3',\n        type: 'bar',\n        title: 'Vendas por Região',\n        metric: 'total_sales',\n        filters: [],\n        position: { x: 0, y: 2, width: 6, height: 4 },\n        config: { groupBy: 'region', aggregation: 'sum' },\n      },\n    ],\n    filters: [],\n    createdBy: 'admin',\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isPublic: true,\n    allowedRoles: ['admin'],\n  },\n  {\n    id: 'default-manager',\n    name: 'Dashboard Gerencial',\n    description: 'Visão para gerentes de vendas',\n    widgets: [\n      {\n        id: 'widget-4',\n        type: 'kpi',\n        title: 'Taxa de Conversão',\n        metric: 'conversion_rate',\n        filters: [],\n        position: { x: 0, y: 0, width: 4, height: 2 },\n        config: { format: 'percentage', target: 0.25 },\n      },\n      {\n        id: 'widget-5',\n        type: 'line',\n        title: 'Evolução de Vendas',\n        metric: 'total_sales',\n        filters: [],\n        position: { x: 0, y: 2, width: 8, height: 4 },\n        config: { xAxis: 'date', aggregation: 'sum' },\n      },\n    ],\n    filters: [],\n    createdBy: 'manager',\n    createdAt: new Date(),\n    updatedAt: new Date(),\n    isPublic: true,\n    allowedRoles: ['manager'],\n  },\n];\n\n// Mock data for charts\nexport const MOCK_CHART_DATA = {\n  sales_by_region: [\n    { name: 'Norte', value: 45000 },\n    { name: 'Sul', value: 38000 },\n    { name: 'Sudeste', value: 62000 },\n    { name: 'Nordeste', value: 28000 },\n    { name: 'Centro-Oeste', value: 35000 },\n  ],\n  sales_evolution: [\n    { date: '2024-01', value: 25000 },\n    { date: '2024-02', value: 32000 },\n    { date: '2024-03', value: 28000 },\n    { date: '2024-04', value: 45000 },\n    { date: '2024-05', value: 38000 },\n    { date: '2024-06', value: 52000 },\n  ],\n  opportunities_by_status: [\n    { name: 'Qualificado', value: 45 },\n    { name: 'Proposta', value: 32 },\n    { name: 'Negociação', value: 28 },\n    { name: 'Fechado', value: 95 },\n  ],\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 822, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/widget-renderer.tsx"],"sourcesContent":["\"use client\";\n\nimport { DashboardWidget } from '@/lib/dashboard/types';\nimport { MOCK_CHART_DATA } from '@/lib/dashboard/mock-data';\nimport {\n  BarChart,\n  Bar,\n  LineChart,\n  Line,\n  PieChart,\n  Pie,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  ResponsiveContainer,\n  Cell,\n} from 'recharts';\nimport { Card, CardContent } from '@/components/ui/card';\n\ninterface WidgetRendererProps {\n  widget: DashboardWidget;\n}\n\nconst COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884D8'];\n\nexport function WidgetRenderer({ widget }: WidgetRendererProps) {\n  const formatValue = (value: number) => {\n    switch (widget.config.format) {\n      case 'currency':\n        return new Intl.NumberFormat('pt-BR', {\n          style: 'currency',\n          currency: 'BRL',\n        }).format(value);\n      case 'percentage':\n        return `${value.toFixed(1)}%`;\n      default:\n        return value.toLocaleString('pt-BR');\n    }\n  };\n\n  const renderKPI = () => {\n    // For demo, we'll use a random value between 1000 and 100000\n    const value = Math.floor(Math.random() * 99000) + 1000;\n    const target = widget.config.target || value * 1.2;\n    const percentage = (value / target) * 100;\n\n    return (\n      <div className=\"text-center\">\n        <div className=\"text-3xl font-bold mb-2\">{formatValue(value)}</div>\n        {widget.config.target && (\n          <div className=\"text-sm text-gray-500\">\n            Meta: {formatValue(target)}\n            <div className=\"w-full bg-gray-200 rounded-full h-2.5 mt-2\">\n              <div\n                className=\"bg-blue-600 h-2.5 rounded-full\"\n                style={{ width: `${Math.min(percentage, 100)}%` }}\n              />\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const renderBarChart = () => {\n    const data = MOCK_CHART_DATA.sales_by_region;\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip formatter={(value) => formatValue(Number(value))} />\n          <Bar dataKey=\"value\" fill=\"#3b82f6\">\n            {data.map((_, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderLineChart = () => {\n    const data = MOCK_CHART_DATA.sales_evolution;\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <LineChart data={data}>\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"date\" />\n          <YAxis />\n          <Tooltip formatter={(value) => formatValue(Number(value))} />\n          <Line\n            type=\"monotone\"\n            dataKey=\"value\"\n            stroke=\"#3b82f6\"\n            strokeWidth={2}\n            dot={{ r: 4 }}\n          />\n        </LineChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderPieChart = () => {\n    const data = MOCK_CHART_DATA.opportunities_by_status;\n    return (\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart>\n          <Pie\n            data={data}\n            dataKey=\"value\"\n            nameKey=\"name\"\n            cx=\"50%\"\n            cy=\"50%\"\n            outerRadius={80}\n            label={(entry) => entry.name}\n          >\n            {data.map((_, index) => (\n              <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip formatter={(value) => formatValue(Number(value))} />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n  };\n\n  const renderTable = () => {\n    const data = MOCK_CHART_DATA.sales_by_region;\n    return (\n      <div className=\"overflow-x-auto\">\n        <table className=\"min-w-full divide-y divide-gray-200\">\n          <thead className=\"bg-gray-50\">\n            <tr>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Região\n              </th>\n              <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">\n                Valor\n              </th>\n            </tr>\n          </thead>\n          <tbody className=\"bg-white divide-y divide-gray-200\">\n            {data.map((item, index) => (\n              <tr key={index}>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {item.name}\n                </td>\n                <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900\">\n                  {formatValue(item.value)}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    );\n  };\n\n  const renderWidget = () => {\n    switch (widget.type) {\n      case 'kpi':\n        return renderKPI();\n      case 'bar':\n        return renderBarChart();\n      case 'line':\n        return renderLineChart();\n      case 'pie':\n        return renderPieChart();\n      case 'table':\n        return renderTable();\n      default:\n        return <div>Widget type not supported</div>;\n    }\n  };\n\n  return (\n    <div className=\"h-full\">\n      {renderWidget()}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1205, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { CheckIcon, ChevronDownIcon, ChevronUpIcon } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Select({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Root>) {\n  return <SelectPrimitive.Root data-slot=\"select\" {...props} />\n}\n\nfunction SelectGroup({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Group>) {\n  return <SelectPrimitive.Group data-slot=\"select-group\" {...props} />\n}\n\nfunction SelectValue({\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Value>) {\n  return <SelectPrimitive.Value data-slot=\"select-value\" {...props} />\n}\n\nfunction SelectTrigger({\n  className,\n  size = \"default\",\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Trigger> & {\n  size?: \"sm\" | \"default\"\n}) {\n  return (\n    <SelectPrimitive.Trigger\n      data-slot=\"select-trigger\"\n      data-size={size}\n      className={cn(\n        \"border-input data-[placeholder]:text-muted-foreground [&_svg:not([class*='text-'])]:text-muted-foreground focus-visible:border-ring focus-visible:ring-ring/50 aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive dark:bg-input/30 dark:hover:bg-input/50 flex w-fit items-center justify-between gap-2 rounded-md border bg-transparent px-3 py-2 text-sm whitespace-nowrap shadow-xs transition-[color,box-shadow] outline-none focus-visible:ring-[3px] disabled:cursor-not-allowed disabled:opacity-50 data-[size=default]:h-9 data-[size=sm]:h-8 *:data-[slot=select-value]:line-clamp-1 *:data-[slot=select-value]:flex *:data-[slot=select-value]:items-center *:data-[slot=select-value]:gap-2 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <SelectPrimitive.Icon asChild>\n        <ChevronDownIcon className=\"size-4 opacity-50\" />\n      </SelectPrimitive.Icon>\n    </SelectPrimitive.Trigger>\n  )\n}\n\nfunction SelectContent({\n  className,\n  children,\n  position = \"popper\",\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Content>) {\n  return (\n    <SelectPrimitive.Portal>\n      <SelectPrimitive.Content\n        data-slot=\"select-content\"\n        className={cn(\n          \"bg-popover text-popover-foreground data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2 relative z-50 max-h-(--radix-select-content-available-height) min-w-[8rem] origin-(--radix-select-content-transform-origin) overflow-x-hidden overflow-y-auto rounded-md border shadow-md\",\n          position === \"popper\" &&\n            \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n          className\n        )}\n        position={position}\n        {...props}\n      >\n        <SelectScrollUpButton />\n        <SelectPrimitive.Viewport\n          className={cn(\n            \"p-1\",\n            position === \"popper\" &&\n              \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)] scroll-my-1\"\n          )}\n        >\n          {children}\n        </SelectPrimitive.Viewport>\n        <SelectScrollDownButton />\n      </SelectPrimitive.Content>\n    </SelectPrimitive.Portal>\n  )\n}\n\nfunction SelectLabel({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Label>) {\n  return (\n    <SelectPrimitive.Label\n      data-slot=\"select-label\"\n      className={cn(\"text-muted-foreground px-2 py-1.5 text-xs\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectItem({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Item>) {\n  return (\n    <SelectPrimitive.Item\n      data-slot=\"select-item\"\n      className={cn(\n        \"focus:bg-accent focus:text-accent-foreground [&_svg:not([class*='text-'])]:text-muted-foreground relative flex w-full cursor-default items-center gap-2 rounded-sm py-1.5 pr-8 pl-2 text-sm outline-hidden select-none data-[disabled]:pointer-events-none data-[disabled]:opacity-50 [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 *:[span]:last:flex *:[span]:last:items-center *:[span]:last:gap-2\",\n        className\n      )}\n      {...props}\n    >\n      <span className=\"absolute right-2 flex size-3.5 items-center justify-center\">\n        <SelectPrimitive.ItemIndicator>\n          <CheckIcon className=\"size-4\" />\n        </SelectPrimitive.ItemIndicator>\n      </span>\n      <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n    </SelectPrimitive.Item>\n  )\n}\n\nfunction SelectSeparator({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.Separator>) {\n  return (\n    <SelectPrimitive.Separator\n      data-slot=\"select-separator\"\n      className={cn(\"bg-border pointer-events-none -mx-1 my-1 h-px\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction SelectScrollUpButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollUpButton>) {\n  return (\n    <SelectPrimitive.ScrollUpButton\n      data-slot=\"select-scroll-up-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronUpIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollUpButton>\n  )\n}\n\nfunction SelectScrollDownButton({\n  className,\n  ...props\n}: React.ComponentProps<typeof SelectPrimitive.ScrollDownButton>) {\n  return (\n    <SelectPrimitive.ScrollDownButton\n      data-slot=\"select-scroll-down-button\"\n      className={cn(\n        \"flex cursor-default items-center justify-center py-1\",\n        className\n      )}\n      {...props}\n    >\n      <ChevronDownIcon className=\"size-4\" />\n    </SelectPrimitive.ScrollDownButton>\n  )\n}\n\nexport {\n  Select,\n  SelectContent,\n  SelectGroup,\n  SelectItem,\n  SelectLabel,\n  SelectScrollDownButton,\n  SelectScrollUpButton,\n  SelectSeparator,\n  SelectTrigger,\n  SelectValue,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1454, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/tabs.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Tabs({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Root>) {\n  return (\n    <TabsPrimitive.Root\n      data-slot=\"tabs\"\n      className={cn(\"flex flex-col gap-2\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TabsList({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.List>) {\n  return (\n    <TabsPrimitive.List\n      data-slot=\"tabs-list\"\n      className={cn(\n        \"bg-muted text-muted-foreground inline-flex h-9 w-fit items-center justify-center rounded-lg p-[3px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsTrigger({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Trigger>) {\n  return (\n    <TabsPrimitive.Trigger\n      data-slot=\"tabs-trigger\"\n      className={cn(\n        \"data-[state=active]:bg-background dark:data-[state=active]:text-foreground focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:outline-ring dark:data-[state=active]:border-input dark:data-[state=active]:bg-input/30 text-foreground dark:text-muted-foreground inline-flex h-[calc(100%-1px)] flex-1 items-center justify-center gap-1.5 rounded-md border border-transparent px-2 py-1 text-sm font-medium whitespace-nowrap transition-[color,box-shadow] focus-visible:ring-[3px] focus-visible:outline-1 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:shadow-sm [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TabsContent({\n  className,\n  ...props\n}: React.ComponentProps<typeof TabsPrimitive.Content>) {\n  return (\n    <TabsPrimitive.Content\n      data-slot=\"tabs-content\"\n      className={cn(\"flex-1 outline-none\", className)}\n      {...props}\n    />\n  )\n}\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent }\n"],"names":[],"mappings":";;;;;;;AAGA;AAEA;AALA;;;;AAOA,SAAS,KAAK,EACZ,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,SAAS,EAChB,SAAS,EACT,GAAG,OAC6C;IAChD,qBACE,6LAAC,mKAAA,CAAA,OAAkB;QACjB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,uGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mqBACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS;AAgBT,SAAS,YAAY,EACnB,SAAS,EACT,GAAG,OACgD;IACnD,qBACE,6LAAC,mKAAA,CAAA,UAAqB;QACpB,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,uBAAuB;QACpC,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 1530, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/widget-config-dialog.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState } from 'react';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle } from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { DashboardWidget, MetricDefinition, FieldDefinition } from '@/lib/dashboard/types';\n\ninterface WidgetConfigDialogProps {\n  widget: DashboardWidget;\n  isOpen: boolean;\n  onClose: () => void;\n  onSave: (widget: DashboardWidget) => void;\n  metrics: MetricDefinition[];\n  fields: FieldDefinition[];\n}\n\nexport function WidgetConfigDialog({\n  widget,\n  isOpen,\n  onClose,\n  onSave,\n  metrics,\n  fields,\n}: WidgetConfigDialogProps) {\n  const [editedWidget, setEditedWidget] = useState<DashboardWidget>({ ...widget });\n\n  const handleSave = () => {\n    onSave(editedWidget);\n    onClose();\n  };\n\n  const updateConfig = (key: string, value: any) => {\n    setEditedWidget({\n      ...editedWidget,\n      config: {\n        ...editedWidget.config,\n        [key]: value,\n      },\n    });\n  };\n\n  return (\n    <Dialog open={isOpen} onOpenChange={onClose}>\n      <DialogContent className=\"max-w-2xl\">\n        <DialogHeader>\n          <DialogTitle>Configurar Widget</DialogTitle>\n        </DialogHeader>\n\n        <Tabs defaultValue=\"general\">\n          <TabsList className=\"grid w-full grid-cols-3\">\n            <TabsTrigger value=\"general\">Geral</TabsTrigger>\n            <TabsTrigger value=\"data\">Dados</TabsTrigger>\n            <TabsTrigger value=\"style\">Estilo</TabsTrigger>\n          </TabsList>\n\n          <TabsContent value=\"general\" className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"title\">Título</Label>\n              <Input\n                id=\"title\"\n                value={editedWidget.title}\n                onChange={(e) =>\n                  setEditedWidget({ ...editedWidget, title: e.target.value })\n                }\n              />\n            </div>\n\n            <div>\n              <Label>Tipo de Widget</Label>\n              <Select\n                value={editedWidget.type}\n                onValueChange={(value: any) =>\n                  setEditedWidget({ ...editedWidget, type: value })\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"kpi\">KPI</SelectItem>\n                  <SelectItem value=\"bar\">Gráfico de Barras</SelectItem>\n                  <SelectItem value=\"line\">Gráfico de Linha</SelectItem>\n                  <SelectItem value=\"pie\">Gráfico de Pizza</SelectItem>\n                  <SelectItem value=\"table\">Tabela</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"data\" className=\"space-y-4\">\n            <div>\n              <Label>Métrica</Label>\n              <Select\n                value={editedWidget.metric}\n                onValueChange={(value) =>\n                  setEditedWidget({ ...editedWidget, metric: value })\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  {metrics.map((metric) => (\n                    <SelectItem key={metric.id} value={metric.id}>\n                      {metric.name}\n                    </SelectItem>\n                  ))}\n                </SelectContent>\n              </Select>\n            </div>\n\n            {(editedWidget.type === 'bar' || editedWidget.type === 'pie') && (\n              <div>\n                <Label>Agrupar por</Label>\n                <Select\n                  value={editedWidget.config.groupBy}\n                  onValueChange={(value) => updateConfig('groupBy', value)}\n                >\n                  <SelectTrigger>\n                    <SelectValue />\n                  </SelectTrigger>\n                  <SelectContent>\n                    {fields\n                      .filter((field) => field.groupable)\n                      .map((field) => (\n                        <SelectItem key={field.id} value={field.id}>\n                          {field.name}\n                        </SelectItem>\n                      ))}\n                  </SelectContent>\n                </Select>\n              </div>\n            )}\n\n            {editedWidget.type === 'kpi' && (\n              <div>\n                <Label>Meta</Label>\n                <Input\n                  type=\"number\"\n                  value={editedWidget.config.target || ''}\n                  onChange={(e) =>\n                    updateConfig('target', parseFloat(e.target.value))\n                  }\n                />\n              </div>\n            )}\n\n            <div>\n              <Label>Formato</Label>\n              <Select\n                value={editedWidget.config.format || 'number'}\n                onValueChange={(value) => updateConfig('format', value)}\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"number\">Número</SelectItem>\n                  <SelectItem value=\"currency\">Moeda</SelectItem>\n                  <SelectItem value=\"percentage\">Porcentagem</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </TabsContent>\n\n          <TabsContent value=\"style\" className=\"space-y-4\">\n            <div>\n              <Label>Mostrar Legenda</Label>\n              <Select\n                value={editedWidget.config.showLegend?.toString() || 'true'}\n                onValueChange={(value) =>\n                  updateConfig('showLegend', value === 'true')\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"true\">Sim</SelectItem>\n                  <SelectItem value=\"false\">Não</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n\n            <div>\n              <Label>Mostrar Grade</Label>\n              <Select\n                value={editedWidget.config.showGrid?.toString() || 'true'}\n                onValueChange={(value) =>\n                  updateConfig('showGrid', value === 'true')\n                }\n              >\n                <SelectTrigger>\n                  <SelectValue />\n                </SelectTrigger>\n                <SelectContent>\n                  <SelectItem value=\"true\">Sim</SelectItem>\n                  <SelectItem value=\"false\">Não</SelectItem>\n                </SelectContent>\n              </Select>\n            </div>\n          </TabsContent>\n        </Tabs>\n\n        <div className=\"flex justify-end gap-2\">\n          <Button variant=\"outline\" onClick={onClose}>\n            Cancelar\n          </Button>\n          <Button onClick={handleSave}>Salvar</Button>\n        </div>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AARA;;;;;;;;AAoBO,SAAS,mBAAmB,EACjC,MAAM,EACN,MAAM,EACN,OAAO,EACP,MAAM,EACN,OAAO,EACP,MAAM,EACkB;;IACxB,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAmB;QAAE,GAAG,MAAM;IAAC;IAE9E,MAAM,aAAa;QACjB,OAAO;QACP;IACF;IAEA,MAAM,eAAe,CAAC,KAAa;QACjC,gBAAgB;YACd,GAAG,YAAY;YACf,QAAQ;gBACN,GAAG,aAAa,MAAM;gBACtB,CAAC,IAAI,EAAE;YACT;QACF;IACF;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;kBAClC,cAAA,6LAAC,qIAAA,CAAA,gBAAa;YAAC,WAAU;;8BACvB,6LAAC,qIAAA,CAAA,eAAY;8BACX,cAAA,6LAAC,qIAAA,CAAA,cAAW;kCAAC;;;;;;;;;;;8BAGf,6LAAC,mIAAA,CAAA,OAAI;oBAAC,cAAa;;sCACjB,6LAAC,mIAAA,CAAA,WAAQ;4BAAC,WAAU;;8CAClB,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAU;;;;;;8CAC7B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAO;;;;;;8CAC1B,6LAAC,mIAAA,CAAA,cAAW;oCAAC,OAAM;8CAAQ;;;;;;;;;;;;sCAG7B,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAU,WAAU;;8CACrC,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;4CAAC,SAAQ;sDAAQ;;;;;;sDACvB,6LAAC,oIAAA,CAAA,QAAK;4CACJ,IAAG;4CACH,OAAO,aAAa,KAAK;4CACzB,UAAU,CAAC,IACT,gBAAgB;oDAAE,GAAG,YAAY;oDAAE,OAAO,EAAE,MAAM,CAAC,KAAK;gDAAC;;;;;;;;;;;;8CAK/D,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,IAAI;4CACxB,eAAe,CAAC,QACd,gBAAgB;oDAAE,GAAG,YAAY;oDAAE,MAAM;gDAAM;;8DAGjD,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;sEACxB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;sEACxB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAO;;;;;;sEACzB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAM;;;;;;sEACxB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMlC,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAO,WAAU;;8CAClC,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,MAAM;4CAC1B,eAAe,CAAC,QACd,gBAAgB;oDAAE,GAAG,YAAY;oDAAE,QAAQ;gDAAM;;8DAGnD,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;8DACX,QAAQ,GAAG,CAAC,CAAC,uBACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAiB,OAAO,OAAO,EAAE;sEACzC,OAAO,IAAI;2DADG,OAAO,EAAE;;;;;;;;;;;;;;;;;;;;;;gCAQjC,CAAC,aAAa,IAAI,KAAK,SAAS,aAAa,IAAI,KAAK,KAAK,mBAC1D,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,MAAM,CAAC,OAAO;4CAClC,eAAe,CAAC,QAAU,aAAa,WAAW;;8DAElD,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;8DACX,OACE,MAAM,CAAC,CAAC,QAAU,MAAM,SAAS,EACjC,GAAG,CAAC,CAAC,sBACJ,6LAAC,qIAAA,CAAA,aAAU;4DAAgB,OAAO,MAAM,EAAE;sEACvC,MAAM,IAAI;2DADI,MAAM,EAAE;;;;;;;;;;;;;;;;;;;;;;gCASpC,aAAa,IAAI,KAAK,uBACrB,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,oIAAA,CAAA,QAAK;4CACJ,MAAK;4CACL,OAAO,aAAa,MAAM,CAAC,MAAM,IAAI;4CACrC,UAAU,CAAC,IACT,aAAa,UAAU,WAAW,EAAE,MAAM,CAAC,KAAK;;;;;;;;;;;;8CAMxD,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,MAAM,CAAC,MAAM,IAAI;4CACrC,eAAe,CAAC,QAAU,aAAa,UAAU;;8DAEjD,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAS;;;;;;sEAC3B,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAW;;;;;;sEAC7B,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;sCAMvC,6LAAC,mIAAA,CAAA,cAAW;4BAAC,OAAM;4BAAQ,WAAU;;8CACnC,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,MAAM,CAAC,UAAU,EAAE,cAAc;4CACrD,eAAe,CAAC,QACd,aAAa,cAAc,UAAU;;8DAGvC,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAO;;;;;;sEACzB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAQ;;;;;;;;;;;;;;;;;;;;;;;;8CAKhC,6LAAC;;sDACC,6LAAC,oIAAA,CAAA,QAAK;sDAAC;;;;;;sDACP,6LAAC,qIAAA,CAAA,SAAM;4CACL,OAAO,aAAa,MAAM,CAAC,QAAQ,EAAE,cAAc;4CACnD,eAAe,CAAC,QACd,aAAa,YAAY,UAAU;;8DAGrC,6LAAC,qIAAA,CAAA,gBAAa;8DACZ,cAAA,6LAAC,qIAAA,CAAA,cAAW;;;;;;;;;;8DAEd,6LAAC,qIAAA,CAAA,gBAAa;;sEACZ,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAO;;;;;;sEACzB,6LAAC,qIAAA,CAAA,aAAU;4DAAC,OAAM;sEAAQ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8BAOpC,6LAAC;oBAAI,WAAU;;sCACb,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,SAAS;sCAAS;;;;;;sCAG5C,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAS;sCAAY;;;;;;;;;;;;;;;;;;;;;;;AAKvC;GArMgB;KAAA","debugId":null}},
    {"offset": {"line": 2141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/dashboard/dashboard-builder.tsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useCallback } from 'react';\nimport { DragDropContext, Droppable, Draggable } from '@hello-pangea/dnd';\nimport { Button } from '@/components/ui/button';\nimport { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';\nimport { Dialog, DialogContent, DialogHeader, DialogTitle, DialogTrigger } from '@/components/ui/dialog';\nimport { Badge } from '@/components/ui/badge';\nimport { Separator } from '@/components/ui/separator';\nimport {\n  Plus,\n  Settings,\n  Save,\n  Eye,\n  Trash2,\n  GripVertical,\n  BarChart3,\n  LineChart,\n  PieChart,\n  Activity,\n  Table,\n} from 'lucide-react';\n\nimport { Dashboard, DashboardWidget, MetricDefinition, FieldDefinition, ChartType } from '@/lib/dashboard/types';\nimport { MOCK_METRICS, MOCK_FIELDS, CHART_TYPES, MOCK_DASHBOARDS } from '@/lib/dashboard/mock-data';\nimport { WidgetRenderer } from './widget-renderer';\nimport { WidgetConfigDialog } from './widget-config-dialog';\n\ninterface DashboardBuilderProps {\n  userRole: string;\n  userId: string;\n}\n\nexport function DashboardBuilder({ userRole, userId }: DashboardBuilderProps) {\n  const [selectedDashboard, setSelectedDashboard] = useState<Dashboard | null>(null);\n  const [dashboards, setDashboards] = useState<Dashboard[]>(MOCK_DASHBOARDS);\n  const [isCreating, setIsCreating] = useState(false);\n  const [newDashboardName, setNewDashboardName] = useState('');\n  const [newDashboardDescription, setNewDashboardDescription] = useState('');\n  const [selectedWidget, setSelectedWidget] = useState<DashboardWidget | null>(null);\n  const [isConfigDialogOpen, setIsConfigDialogOpen] = useState(false);\n\n  const getChartIcon = (type: string) => {\n    switch (type) {\n      case 'bar': return <BarChart3 className=\"h-4 w-4\" />;\n      case 'line': return <LineChart className=\"h-4 w-4\" />;\n      case 'pie': return <PieChart className=\"h-4 w-4\" />;\n      case 'kpi': return <Activity className=\"h-4 w-4\" />;\n      case 'table': return <Table className=\"h-4 w-4\" />;\n      default: return <BarChart3 className=\"h-4 w-4\" />;\n    }\n  };\n\n  const createNewDashboard = () => {\n    if (!newDashboardName.trim()) return;\n\n    const newDashboard: Dashboard = {\n      id: `dashboard-${Date.now()}`,\n      name: newDashboardName,\n      description: newDashboardDescription,\n      widgets: [],\n      filters: [],\n      createdBy: userId,\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      isPublic: false,\n      allowedRoles: [userRole],\n    };\n\n    setDashboards([...dashboards, newDashboard]);\n    setSelectedDashboard(newDashboard);\n    setIsCreating(false);\n    setNewDashboardName('');\n    setNewDashboardDescription('');\n  };\n\n  const addWidget = (chartType: ChartType) => {\n    if (!selectedDashboard) return;\n\n    const newWidget: DashboardWidget = {\n      id: `widget-${Date.now()}`,\n      type: chartType.id as any,\n      title: `Novo ${chartType.name}`,\n      metric: chartType.supportedMetrics[0] || 'total_sales',\n      filters: [],\n      position: {\n        x: 0,\n        y: selectedDashboard.widgets.length * 2,\n        width: chartType.id === 'kpi' ? 3 : 6,\n        height: chartType.id === 'kpi' ? 2 : 4,\n      },\n      config: {\n        format: 'number',\n        aggregation: 'sum',\n      },\n    };\n\n    const updatedDashboard = {\n      ...selectedDashboard,\n      widgets: [...selectedDashboard.widgets, newWidget],\n      updatedAt: new Date(),\n    };\n\n    setSelectedDashboard(updatedDashboard);\n    setDashboards(dashboards.map(d => d.id === updatedDashboard.id ? updatedDashboard : d));\n  };\n\n  const updateWidget = (updatedWidget: DashboardWidget) => {\n    if (!selectedDashboard) return;\n\n    const updatedDashboard = {\n      ...selectedDashboard,\n      widgets: selectedDashboard.widgets.map(w => w.id === updatedWidget.id ? updatedWidget : w),\n      updatedAt: new Date(),\n    };\n\n    setSelectedDashboard(updatedDashboard);\n    setDashboards(dashboards.map(d => d.id === updatedDashboard.id ? updatedDashboard : d));\n  };\n\n  const deleteWidget = (widgetId: string) => {\n    if (!selectedDashboard) return;\n\n    const updatedDashboard = {\n      ...selectedDashboard,\n      widgets: selectedDashboard.widgets.filter(w => w.id !== widgetId),\n      updatedAt: new Date(),\n    };\n\n    setSelectedDashboard(updatedDashboard);\n    setDashboards(dashboards.map(d => d.id === updatedDashboard.id ? updatedDashboard : d));\n  };\n\n  const onDragEnd = (result: any) => {\n    if (!result.destination || !selectedDashboard) return;\n\n    const widgets = Array.from(selectedDashboard.widgets);\n    const [reorderedWidget] = widgets.splice(result.source.index, 1);\n    widgets.splice(result.destination.index, 0, reorderedWidget);\n\n    const updatedDashboard = {\n      ...selectedDashboard,\n      widgets,\n      updatedAt: new Date(),\n    };\n\n    setSelectedDashboard(updatedDashboard);\n    setDashboards(dashboards.map(d => d.id === updatedDashboard.id ? updatedDashboard : d));\n  };\n\n  const saveDashboard = () => {\n    if (!selectedDashboard) return;\n    // In a real app, this would save to the backend\n    console.log('Dashboard saved:', selectedDashboard);\n    alert('Dashboard salvo com sucesso!');\n  };\n\n  const userDashboards = dashboards.filter(d => \n    d.createdBy === userId || \n    d.allowedRoles.includes(userRole) || \n    d.isPublic\n  );\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex items-center justify-between\">\n        <div>\n          <h1 className=\"text-3xl font-bold\">Construtor de Dashboards</h1>\n          <p className=\"text-gray-600\">Crie e personalize seus dashboards</p>\n        </div>\n        <div className=\"flex gap-2\">\n          {selectedDashboard && (\n            <>\n              <Button onClick={saveDashboard} className=\"flex items-center gap-2\">\n                <Save className=\"h-4 w-4\" />\n                Salvar\n              </Button>\n              <Button variant=\"outline\" className=\"flex items-center gap-2\">\n                <Eye className=\"h-4 w-4\" />\n                Visualizar\n              </Button>\n            </>\n          )}\n        </div>\n      </div>\n\n      <div className=\"grid grid-cols-12 gap-6\">\n        {/* Sidebar */}\n        <div className=\"col-span-3 space-y-4\">\n          {/* Dashboard Selection */}\n          <Card>\n            <CardHeader>\n              <CardTitle className=\"text-lg\">Dashboards</CardTitle>\n            </CardHeader>\n            <CardContent className=\"space-y-2\">\n              {userDashboards.map((dashboard) => (\n                <div\n                  key={dashboard.id}\n                  className={`p-3 rounded-lg border cursor-pointer transition-colors ${\n                    selectedDashboard?.id === dashboard.id\n                      ? 'bg-blue-50 border-blue-200'\n                      : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedDashboard(dashboard)}\n                >\n                  <div className=\"font-medium\">{dashboard.name}</div>\n                  <div className=\"text-sm text-gray-500\">{dashboard.description}</div>\n                  <div className=\"flex items-center gap-1 mt-2\">\n                    <Badge variant=\"secondary\" className=\"text-xs\">\n                      {dashboard.widgets.length} widgets\n                    </Badge>\n                    {dashboard.createdBy === userId && (\n                      <Badge variant=\"outline\" className=\"text-xs\">Meu</Badge>\n                    )}\n                  </div>\n                </div>\n              ))}\n              \n              <Dialog open={isCreating} onOpenChange={setIsCreating}>\n                <DialogTrigger asChild>\n                  <Button variant=\"outline\" className=\"w-full\">\n                    <Plus className=\"h-4 w-4 mr-2\" />\n                    Novo Dashboard\n                  </Button>\n                </DialogTrigger>\n                <DialogContent>\n                  <DialogHeader>\n                    <DialogTitle>Criar Novo Dashboard</DialogTitle>\n                  </DialogHeader>\n                  <div className=\"space-y-4\">\n                    <div>\n                      <Label htmlFor=\"name\">Nome</Label>\n                      <Input\n                        id=\"name\"\n                        value={newDashboardName}\n                        onChange={(e) => setNewDashboardName(e.target.value)}\n                        placeholder=\"Nome do dashboard\"\n                      />\n                    </div>\n                    <div>\n                      <Label htmlFor=\"description\">Descrição</Label>\n                      <Input\n                        id=\"description\"\n                        value={newDashboardDescription}\n                        onChange={(e) => setNewDashboardDescription(e.target.value)}\n                        placeholder=\"Descrição do dashboard\"\n                      />\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <Button onClick={createNewDashboard} disabled={!newDashboardName.trim()}>\n                        Criar\n                      </Button>\n                      <Button variant=\"outline\" onClick={() => setIsCreating(false)}>\n                        Cancelar\n                      </Button>\n                    </div>\n                  </div>\n                </DialogContent>\n              </Dialog>\n            </CardContent>\n          </Card>\n\n          {/* Widget Types */}\n          {selectedDashboard && (\n            <Card>\n              <CardHeader>\n                <CardTitle className=\"text-lg\">Adicionar Widget</CardTitle>\n              </CardHeader>\n              <CardContent className=\"space-y-2\">\n                {CHART_TYPES.map((chartType) => (\n                  <Button\n                    key={chartType.id}\n                    variant=\"outline\"\n                    className=\"w-full justify-start\"\n                    onClick={() => addWidget(chartType)}\n                  >\n                    {getChartIcon(chartType.id)}\n                    <span className=\"ml-2\">{chartType.name}</span>\n                  </Button>\n                ))}\n              </CardContent>\n            </Card>\n          )}\n        </div>\n\n        {/* Main Content */}\n        <div className=\"col-span-9\">\n          {selectedDashboard ? (\n            <Card>\n              <CardHeader>\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <CardTitle>{selectedDashboard.name}</CardTitle>\n                    <p className=\"text-gray-600\">{selectedDashboard.description}</p>\n                  </div>\n                  <Badge variant=\"outline\">\n                    {selectedDashboard.widgets.length} widgets\n                  </Badge>\n                </div>\n              </CardHeader>\n              <CardContent>\n                {selectedDashboard.widgets.length === 0 ? (\n                  <div className=\"text-center py-12\">\n                    <div className=\"text-gray-400 mb-4\">\n                      <BarChart3 className=\"h-12 w-12 mx-auto\" />\n                    </div>\n                    <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                      Nenhum widget adicionado\n                    </h3>\n                    <p className=\"text-gray-600\">\n                      Comece adicionando widgets do painel lateral\n                    </p>\n                  </div>\n                ) : (\n                  <DragDropContext onDragEnd={onDragEnd}>\n                    <Droppable droppableId=\"widgets\">\n                      {(provided) => (\n                        <div\n                          {...provided.droppableProps}\n                          ref={provided.innerRef}\n                          className=\"space-y-4\"\n                        >\n                          {selectedDashboard.widgets.map((widget, index) => (\n                            <Draggable key={widget.id} draggableId={widget.id} index={index}>\n                              {(provided) => (\n                                <div\n                                  ref={provided.innerRef}\n                                  {...provided.draggableProps}\n                                  className=\"bg-white border rounded-lg p-4 shadow-sm\"\n                                >\n                                  <div className=\"flex items-center justify-between mb-4\">\n                                    <div className=\"flex items-center gap-2\">\n                                      <div {...provided.dragHandleProps}>\n                                        <GripVertical className=\"h-4 w-4 text-gray-400\" />\n                                      </div>\n                                      {getChartIcon(widget.type)}\n                                      <span className=\"font-medium\">{widget.title}</span>\n                                    </div>\n                                    <div className=\"flex gap-2\">\n                                      <Button\n                                        size=\"sm\"\n                                        variant=\"outline\"\n                                        onClick={() => {\n                                          setSelectedWidget(widget);\n                                          setIsConfigDialogOpen(true);\n                                        }}\n                                      >\n                                        <Settings className=\"h-4 w-4\" />\n                                      </Button>\n                                      <Button\n                                        size=\"sm\"\n                                        variant=\"outline\"\n                                        onClick={() => deleteWidget(widget.id)}\n                                      >\n                                        <Trash2 className=\"h-4 w-4\" />\n                                      </Button>\n                                    </div>\n                                  </div>\n                                  <div className=\"h-64\">\n                                    <WidgetRenderer widget={widget} />\n                                  </div>\n                                </div>\n                              )}\n                            </Draggable>\n                          ))}\n                          {provided.placeholder}\n                        </div>\n                      )}\n                    </Droppable>\n                  </DragDropContext>\n                )}\n              </CardContent>\n            </Card>\n          ) : (\n            <Card>\n              <CardContent className=\"text-center py-12\">\n                <div className=\"text-gray-400 mb-4\">\n                  <PieChart className=\"h-12 w-12 mx-auto\" />\n                </div>\n                <h3 className=\"text-lg font-medium text-gray-900 mb-2\">\n                  Selecione um dashboard\n                </h3>\n                <p className=\"text-gray-600\">\n                  Escolha um dashboard existente ou crie um novo\n                </p>\n              </CardContent>\n            </Card>\n          )}\n        </div>\n      </div>\n\n      {/* Widget Configuration Dialog */}\n      {selectedWidget && (\n        <WidgetConfigDialog\n          widget={selectedWidget}\n          isOpen={isConfigDialogOpen}\n          onClose={() => {\n            setIsConfigDialogOpen(false);\n            setSelectedWidget(null);\n          }}\n          onSave={updateWidget}\n          metrics={MOCK_METRICS}\n          fields={MOCK_FIELDS}\n        />\n      )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}